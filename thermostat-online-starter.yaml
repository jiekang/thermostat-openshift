apiVersion: "v1"
kind: "Template"
metadata:
  name: "thermostat-online-starter"
objects:
###################
## BUILD CONFIGS ##
###################
##### GATEWAY #####
# gateway image bc
- apiVersion: "v1"
  kind: "BuildConfig"
  metadata:
    name: "thermostat-gateway-bc"
    labels:
      app-group: "thermostat-online-starter"
  spec:
    triggers:
      - type: "ConfigChange"
      - type: "ImageChange"
        imageChange: {}
    source:
      type: "Git"
      git:
        uri: "git://icedtea.classpath.org/mirror/git/thermostat-ng-web-gateway"
    strategy:
      type: "Source"
      sourceStrategy:
        from:
          kind: "ImageStreamTag"
          name: "thermostat-gateway-client-builder:latest"
        env:
          # OSO Starter: Limit JVM memory usage and skip tests
        - name: "MAVEN_OPTS"
          value: "-XX:MaxRAM=256m -DskipTests=true"
    output:
      to:
        kind: "ImageStreamTag"
        name: "thermostat-gateway:latest"
    runPolicy: "Serial"
##### CLIENT #####
# client artifacts image bc
- apiVersion: "v1"
  kind: "BuildConfig"
  metadata:
    name: "thermostat-gateway-client-bc"
    labels:
      app-group: "thermostat-online-starter"
  spec:
    triggers:
    - type: "ConfigChange"
    - type: "ImageChange"
      imageChange: {}
    # OSO Starter: Allocate as much memory from our quota as possible for this build.
    # We can limit memory usage by installing deps with npm one at a time,
    # but webpack still needs a lot of memory.
    resources:
      limits:
        memory: "1Gi"
      requests:
        memory: "1Gi"
    source:
      type: "Git"
      git:
        uri: "git://icedtea.classpath.org/mirror/git/thermostat-ng-web-client"
    strategy:
      type: "Source"
      sourceStrategy:
        from:
          kind: "ImageStreamTag"
          name: "thermostat-gateway:latest"
        scripts: "image:///usr/libexec/s2i/webclient"
        env:
          # OSO Starter: Attempt to limit Node.js memory consumption
          # https://stackoverflow.com/a/30254608
        - name: "NODE_ARGS"
          value: "--max-executable-size=192 --max-old-space-size=512 --max-semi-space-size=2"
    output:
      to:
        kind: "ImageStreamTag"
        name: "thermostat-gateway-client:latest"
    runPolicy: "Serial"
##### AGENT #####
# agent bc
- apiVersion: "v1"
  kind: "BuildConfig"
  metadata:
    name: "thermostat-agent-bc"
    labels:
      app-group: "thermostat-online-starter"
  spec:
    triggers:
    - type: "ConfigChange"
    - imageChange: {}
      type: "ImageChange"
    source:
      type: "Git"
      git:
        uri: "git://icedtea.classpath.org/mirror/git/thermostat-ng-agent"
    strategy:
      type: "Source"
      sourceStrategy:
        env:
          # OSO Starter: Limit JVM memory usage and skip tests
        - name: "MAVEN_OPTS"
          value: "-XX:MaxRAM=256m -DskipTests=true"
        from:
          kind: "ImageStreamTag"
          name: "thermostat-agent-wildfly-ex-builder:latest"
    output:
      to:
        kind: "ImageStreamTag"
        name: "thermostat-agent:latest"
    runPolicy: "Serial"
##### WILDFLY-TESTAPP #####
# wildfly testapp
- apiVersion: "v1"
  kind: "BuildConfig"
  metadata:
    name: "thermostat-wildfly-testapp-bc"
    labels:
      app-group: "thermostat-online-starter"
  spec:
    triggers:
    - type: "ConfigChange"
    - imageChange: {}
      type: "ImageChange"
    source:
      type: "Git"
      git:
        uri: "https://github.com/thermostat-project/thermostat-agent-container.git"
      contextDir: "test/wildfly-testapp"
    strategy:
      type: "Source"
      sourceStrategy:
        from:
          kind: "ImageStreamTag"
          name: "thermostat-agent:latest"
        scripts: "image:///usr/libexec/s2i"
    output:
      to:
        kind: "ImageStreamTag"
        name: "thermostat-wildfly-testapp:latest"
    runPolicy: "Serial"
###################
## IMAGE STREAMS ##
###################
#### MONGO #####
# mongodb image
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-mongodb-32-rhel7"
    labels:
      app-group: "thermostat-online-starter"
  spec:
    dockerImageRepository: "registry.access.redhat.com/rhscl/mongodb-32-rhel7"
##### GATEWAY + CLIENT #####
# gateway + client builder image
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-gateway-client-builder"
    labels:
      app-group: "thermostat-online-starter"
  spec:
    dockerImageRepository: "docker.io/icedtea/thermostat-web-gateway-client-builder"
# gateway image
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-gateway"
    labels:
      app-group: "thermostat-online-starter"
# gateway + client image
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-gateway-client"
    labels:
      app-group: "thermostat-online-starter"
##### AGENT + WILDFLY-TESTAPP #####
# agent + wildfly testapp builder image
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-agent-wildfly-ex-builder"
    labels:
      app-group: "thermostat-online-starter"
  spec:
    dockerImageRepository: "docker.io/icedtea/thermostat-agent-wildfly-ex-build"
# agent image
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-agent"
    labels:
      app-group: "thermostat-online-starter"
# agent + wildfly testapp image
- apiVersion: "v1"
  kind: "ImageStream"
  metadata:
    name: "thermostat-wildfly-testapp"
    labels:
      app-group: "thermostat-online-starter"
#############
## SECRETS ##
#############
- apiVersion: "v1"
  kind: "Secret"
  metadata:
    name: "gateway-cert"
  data: 
    # certificate from exported from:
    # http://icedtea.classpath.org/hg/thermostat-ng/web-gateway/file/tip/distribution/src/cert/thermostat.jks
    gateway.crt: |- 
      LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlGbFRDQ0EzMmdBd0lCQWdJRVJDMTlFVEFOQmdr
      cWhraUc5dzBCQVFzRkFEQjdNUXN3Q1FZRFZRUUdFd0pWDQpVekVYTUJVR0ExVUVDQk1PVG05eWRHZ2dR
      MkZ5YjJ4cGJtRXhFREFPQmdOVkJBY1RCMUpoYkdWcFoyZ3hFREFPDQpCZ05WQkFvVEIxSmxaQ0JJWVhR
      eEVEQU9CZ05WQkFzVEIxSmxaQ0JJWVhReEhUQWJCZ05WQkFNVEZGUm9aWEp0DQpiM04wWVhRZ1JHVjJa
      V3h2Y0dWeU1CNFhEVEUzTURZeU1ERTBNelkxTWxvWERURTRNRFl5TURFME16WTFNbG93DQplekVMTUFr
      R0ExVUVCaE1DVlZNeEZ6QVZCZ05WQkFnVERrNXZjblJvSUVOaGNtOXNhVzVoTVJBd0RnWURWUVFIDQpF
      d2RTWVd4bGFXZG9NUkF3RGdZRFZRUUtFd2RTWldRZ1NHRjBNUkF3RGdZRFZRUUxFd2RTWldRZ1NHRjBN
      UjB3DQpHd1lEVlFRREV4UlVhR1Z5Ylc5emRHRjBJRVJsZG1Wc2IzQmxjakNDQWlJd0RRWUpLb1pJaHZj
      TkFRRUJCUUFEDQpnZ0lQQURDQ0Fnb0NnZ0lCQUxZZm5mcytYNkVVakpsWmdRc0QwK0h1Z1NMSTFsZjNY
      MTlMa0djNkJsVlZRbE56DQp2OUUzZjduTWFjclZiQzlCOFRtSkgrVTExdHU4b1NSUmJjYi9jK1kyOFBL
      TVZRZVlXNzFzQXgwd0FFa254aE1uDQpaV3I4UXNYaHFmTTZXQWpiYnlTQnRWalFTVW15TEVHRVVvZ3JF
      QlFoYjFFRjMrOEtLWkcybzdndjlLNzJXQy9LDQpoWVJSc0NiME51UEp6cDVBelZaNS9SMk1sbGVPd0tz
      bUV4NitEVDFmclQrcVdINjk4VWdjS3FreU1iOVNuMWxpDQp0cmhmTUc5RVp6M21WOWJ2am1rVGdsLy9D
      L2NEcS9lcEhhT0xNcUFWOTRuMmpJRmJMdXlRbFlpTTV1QmQva0p1DQp3ZC9GendUbXF3a0NoK2IxMGdC
      V0QrNVJ1TTJLVHRlV201K05XVDFXbnM2MWJESkFIeitxRjEvb0N1V1ozNGdiDQpFN2xsMW80Y0QrQnJ6
      QUI5SHoxaWZ4aDVhVkphcFg5U1NIWmRnWU92L0trdjJVS1NLZjM3ZFZZWTNhcDlKOWxYDQpjSGFEVGo1
      c1VJdWNORk9KdU0xc3BJb3pqYjJIbzh3dEFxMFNXd2NocGxnRXVmYUQ0NHZ1ZkNSQXRjZHE1eHoyDQpF
      aXk0RTNmVUY4TDRheERUSTBjdTdSS2JpbzM5V2ZPYjhwbTZvVVNVN1R2U2srTncyWjVDUndqMnRKWDBO
      SzdPDQpKbTVML0huaHM4N3hDVGRCaEdnMUluakxsRStkOEkrYjk4UGF5ck5EbnlmTVhkYm0rZHZncHpy
      WTh3YW9vNFVqDQpnZGlQNDJaM285QStsV3NiZnpBdDZPV0p2Vm12SU5kcVI0c25Pb2Y4VkgvSnVpQ2xl
      a3VzL2tSOFBBVC9BZ01CDQpBQUdqSVRBZk1CMEdBMVVkRGdRV0JCU3dSS1JTZ2hkK0VGc0lRWmd4V0Jp
      VnhCUzdSekFOQmdrcWhraUc5dzBCDQpBUXNGQUFPQ0FnRUFNN0VGeUlrcythRmI0UVlnODE5S0xtMEh3
      ckN1cjRJWWZXTmw1V01DUVV0Y2hwSXE0TG90DQo4ekdjbFVmT0gvb1hwUmhSTEViY3VETnhyN1JrcU9U
      SnhXUHhKVFBsUjVyQUpCeU9mYWVtZVpWZEN3enpwcERJDQpjYUlJcE1vbExMQmpXcWxiRUxseU9LZzBI
      REROVGdFaU11MEJDTDFaeFhvTFo3ZFNmdzJLbG9VdWRuamhCYXk3DQo1dndTMVd5Y01oVXc0ZDltQm1B
      T2E3NDBqYnZ5a2VadldFOWNWWmVMN3AzVTNwc1NQN3NpdGdhWFg3dkxmdytBDQpQRXZYNk1PZ2VDUUpS
      YWY0ZkJEeUs2WThMaGlUVU9RcWw5b202WVg1YTZnb0h3VlZVR2I0amJIMXdkdmllcWgxDQp2RnJZSi9a
      UTJzOUNJKzlDeUtka1hrQVNHL2RyaUtwc3I2enlXMWVlSUUvLzRFRmRZUzI0VlRXQm0vM1NJV1kxDQpP
      S3E0dEpoS09XSjVLVXFFTWd3MGV3VzREd2xqQ1ZpSXl4OWVML1diQ1grSTVGeUJBNUZhd1VoeCs3ZmhE
      Y0xoDQovRmRkV0ZvVXloZjNjaFhFbmQ4V1JwRTYyWmY5TkxDWGtCNi9vbWxNZmVOdGdVRklhaHN2ZEJo
      akRrdGN3cmVzDQppSTFHWlp4dXNCYWo4eXB5ZkZhbUZkVGg3aWZqaXN4eDhtTmI4aklnNkhPc2RXaDlJ
      bUY0bC9GMzhtRVBjT3lqDQpyNWQxV2JGd2dpUHpGSHhBY2ZTVnNoQXhlamliTXhNQkRuQzdVYWlWTWlD
      dlJzdlVKZk8yQWUxb21LWmZYUkZtDQo5NXJzRWpkOGF1Nk02SGRqZms5a2xDRENERkhEV0V2RDJMWm8x
      Uno2WklQMUVDWVpDWDBEU2hzPQ0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
########################
## DEPLOYMENT CONFIGS ##
########################
# mongodb dc
- apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    name: "thermostat-mongodb-dc"
    labels:
      app: "thermostat-mongodb-app"
      app-group: "thermostat-online-starter"
  spec:
    triggers:
    - type: "ConfigChange"
    - type: "ImageChange"
      imageChangeParams:
        automatic: true
        containerNames:
        - thermostat-mongodb-container
        from:
          kind: "ImageStreamTag"
          name: "thermostat-mongodb-32-rhel7:latest"
    template:
      metadata:
        labels:
          app: "thermostat-mongodb-app"
          app-group: "thermostat-online-starter"
      spec:
        containers:
        - name: "thermostat-mongodb-container"
          image: "thermostat-mongodb-32-rhel7:latest"
          imagePullPolicy: "Always"
          env:
          - name: "MONGODB_ADMIN_PASSWORD"
            value: "arst"
          - name: "MONGODB_DATABASE"
            value: "thermostat"
          - name: "MONGODB_PASSWORD"
            value: "mongo"
          - name: "MONGODB_USER"
            value: "mongo"
          # OSO Starter: Set container memory limit to 1/4 of our total quota
          resources:
            limits:
              memory: "256Mi"
          volumeMounts:
          - mountPath: "/var/lib/mongodb/data"
            name: "thermostat-mongo-storage"
        volumes:
        - name: "thermostat-mongo-storage"
          persistentVolumeClaim:
            claimName: "thermostat-mongo-storage"
    selector:
      app: "thermostat-mongodb-app"
    replicas: 1
    strategy:
      type: "Recreate"
# gateway + client dc
- apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    name: "thermostat-gateway-client-dc"
    labels:
      app: "thermostat-gateway-client-app"
      app-group: "thermostat-online-starter"
  spec:
    triggers:
    - type: "ConfigChange"
    - type: "ImageChange"
      imageChangeParams:
        automatic: true
        containerNames:
        - thermostat-gateway-client-container
        from:
          kind: "ImageStreamTag"
          name: "thermostat-gateway-client:latest"
    template:
      metadata:
        labels:
          app: "thermostat-gateway-client-app"
          app-group: "thermostat-online-starter"
      spec:
        containers:
        - name: "thermostat-gateway-client-container"
          image: "thermostat-gateway-client:latest"
          imagePullPolicy: "Always"
          env:
          - name: "MONGO_DB"
            value: "thermostat"
          - name: "MONGO_PASSWORD"
            value: "mongo"
          - name: "MONGO_URL"
            value: "mongodb://thermostat-mongodb-svc:27017"
          - name: "MONGO_USERNAME"
            value: "mongo"
            # OSO Starter: Limit Java heap size to prevent OOM
          - name: "JAVA_TOOL_OPTIONS"
            value: "-Xmx128m"
          # OSO Starter: Set container memory limit to 1/4 of our total quota
          resources:
            limits:
              memory: "256Mi"
    selector:
      app: "thermostat-gateway-client-app"
    replicas: 1
    strategy:
      type: "Recreate"
      recreateParams: 
        pre:
          failurePolicy: "Retry"
          execNewPod:
            containerName: "thermostat-gateway-client-container"
            # Attempt to connect to MongoDB using Mongo shell
            command: [ "scl", "enable", "rh-mongodb32", "mongo --eval 'quit()' ${MONGO_URL}" ] 
# agent + wildfly-testapp dc
- apiVersion: "v1"
  kind: "DeploymentConfig"
  metadata:
    name: "thermostat-wildfly-testapp-dc"
    labels:
      app: "thermostat-wildfly-testapp-app"
      app-group: "thermostat-online-starter"
  spec:
    triggers:
    - type: "ConfigChange"
    - type: "ImageChange"
      imageChangeParams:
        automatic: true
        containerNames:
        - thermostat-wildfly-testapp-container
        from:
          kind: "ImageStreamTag"
          name: "thermostat-wildfly-testapp:latest"
    template:
      metadata:
        labels:
          app-group: "thermostat-online-starter"
          app: "thermostat-wildfly-testapp-app"
      spec:
        containers:
        - name: "thermostat-wildfly-testapp-container"
          image: "thermostat-wildfly-testapp:latest"
          imagePullPolicy: "Always"
          env:
          - name: "THERMOSTAT_AGENT_PASSWORD"
            value: "agent-pwd"
          - name: "THERMOSTAT_AGENT_USERNAME"
            value: "agent"
          - name: "THERMOSTAT_COMMANDS_URL"
            value: "wss://thermostat-gateway-client-svc:30000/commands/v1"
          - name: "THERMOSTAT_HOST_CPU_URL"
            value: "https://thermostat-gateway-client-svc:30000/system-cpu/0.0.1"
          - name: "THERMOSTAT_HOST_MEMORY_URL"
            value: "https://thermostat-gateway-client-svc:30000/system-memory/0.0.1"
          - name: "THERMOSTAT_HOST_NETWORK_URL"
            value: "https://thermostat-gateway-client-svc:30000/system-network/0.0.1"
          - name: "THERMOSTAT_HOST_OVERVIEW_URL"
            value: "https://thermostat-gateway-client-svc:30000/systems/0.0.1"
          - name: "THERMOSTAT_JVM_OVERVIEW_URL"
            value: "https://thermostat-gateway-client-svc:30000/jvms/0.0.1"
          - name: "THERMOSTAT_VM_GC_URL"
            value: "https://thermostat-gateway-client-svc:30000/jvm-gc/0.0.3"
          - name: "THERMOSTAT_VM_MEMORY_URL"
            value: "https://thermostat-gateway-client-svc:30000/jvm-memory/0.0.3"
          - name: "THERMOSTAT_VM_IO_URL"
            value: "https://thermostat-gateway-client-svc:30000/jvm-io/0.0.1"
          - name: "THERMOSTAT_TLS_CERT_FILE"
            value: "/etc/gateway-cert-secret/gateway.crt"
          - name: "THERMOSTAT_KEYSTORE_PASS"
            value: "${KEYSTORE_PASS}"
          - name: "THERMOSTAT_DISABLE_HOSTNAME_VERIFICATION"
            value: "true"
          volumeMounts:
            - name: "gateway-cert-volume"
              mountPath: "/etc/gateway-cert-secret"
              readOnly: true
        volumes:
          - name: "gateway-cert-volume"
            secret:
              secretName: "gateway-cert"
              defaultMode: 0440
    selector:
      app: "thermostat-wildfly-testapp-app"
    replicas: 1
    strategy:
      type: "Recreate"
      recreateParams: 
        pre:
          failurePolicy: "Retry"
          execNewPod:
            containerName: "thermostat-wildfly-testapp-container"
            # Simple check that the server is up and reachable, 401 error is expected
            command: [ "/usr/bin/curl", "-sSk", "https://thermostat-gateway-client-svc:30000/systems/" ] 
##############
## SERVICES ##
##############
# mongo service
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "thermostat-mongodb-svc"
    labels:
      app: "thermostat-mongodb-app"
      app-group: "thermostat-online-starter"
  spec:
    selector:
      app: "thermostat-mongodb-app"
    ports:
    - name: 27017-tcp
      protocol: TCP
      port: 27017
      targetPort: 27017
# gateway + client service
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "thermostat-gateway-client-svc"
    labels:
      app: "thermostat-gateway-client-app"
      app-group: "thermostat-online-starter"
  spec:
    selector:
      app: "thermostat-gateway-client-app"
    ports:
    - name: 30000-tcp
      protocol: TCP
      port: 30000
      targetPort: 30000
# wildfly-testapp service
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "thermostat-wildfly-testapp-svc"
    labels:
      app: "thermostat-wildfly-testapp-app"
      app-group: "thermostat-online-starter"
  spec:
    selector:
      app: "thermostat-wildfly-testapp-app"
    ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
############
## ROUTES ##
############
# gateway + client route
- apiVersion: "v1"
  kind: "Route"
  metadata:
    name: "thermostat-gateway-client-route"
    labels:
      app-group: "thermostat-online-starter"
  spec:
    to:
      kind: "Service"
      name: "thermostat-gateway-client-svc"
    port:
      targetPort: "30000-tcp"
    tls:
      termination: "passthrough"
# agent + wildfly-testapp route
- apiVersion: "v1"
  kind: "Route"
  metadata:
    name: "thermostat-wildfly-testapp-route"
    labels:
      app-group: "thermostat-online-starter"
  spec:
    to:
      kind: "Service"
      name: "thermostat-wildfly-testapp-svc"
    port:
      targetPort: "8080"
############
# STORAGE ##
############
# OpenShift Online 3 appears to require that images with VOLUME directives
# have a corresponding mount. This PVC satisifies the requirement for the
# MongoDB storage pod.
# https://bugzilla.redhat.com/show_bug.cgi?id=1318542
- apiVersion: "v1"
  kind: "PersistentVolumeClaim"
  metadata:
    name: "thermostat-mongo-storage"
    labels:
      app-group: "thermostat-online-starter"
  spec:
    accessModes:
    - "ReadWriteOnce"
    resources:
      requests:
        storage: "1Gi"
################
## PARAMETERS ##
################
parameters:
- name: "KEYSTORE_PASS"
  description: "Password for the keystore holding the trusted certificate for the web gateway"
  generate: "expression"
  from: "[a-zA-Z0-9]{20}"
